import type { Language } from './types';

// prettier-ignore
const language: Language = {
  code:             'ca',
  schema:           (issue) => `Tipus invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
  specific: {
    bic:            (issue) => `BIC invàlid: S'ha rebut ${issue.received}`,
    bytes:          (issue) => `Bytes invàlids: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    check:          (issue) => `Valor invàlid: S'ha rebut ${issue.received}`,
    checkAsync:     (issue) => `Valor invàlid: S'ha rebut ${issue.received}`,
    creditCard:     (issue) => `Targeta de crèdit invàlida: S'ha rebut ${issue.received}`,
    cuid2:          (issue) => `Cuid2 invàlid: S'ha rebut ${issue.received}`,
    decimal:        (issue) => `Decimal invàlid: S'ha rebut ${issue.received}`,
    email:          (issue) => `Correu electrònic invàlid: S'ha rebut ${issue.received}`,
    emoji:          (issue) => `Emoji invàlid: S'ha rebut ${issue.received}`,
    empty:          (issue) => `Llargada invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    endsWith:       (issue) => `Final invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    excludes:       (issue) => `Contingut invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    finite:         (issue) => `Finit invàlid: S'ha rebut ${issue.received}`,
    hash:           (issue) => `Hash invàlid: S'ha rebut ${issue.received}`,
    hexColor:       (issue) => `Color hexadecimal invàlid: S'ha rebut ${issue.received}`,
    hexadecimal:    (issue) => `Hexadecimal invàlid: S'ha rebut ${issue.received}`,
    imei:           (issue) => `IMEI invàlid: S'ha rebut ${issue.received}`,
    includes:       (issue) => `Contingut invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    integer:        (issue) => `Enter invàlid: S'ha rebut ${issue.received}`,
    ip:             (issue) => `IP invàlida: S'ha rebut ${issue.received}`,
    ipv4:           (issue) => `IPv4 invàlid: S'ha rebut ${issue.received}`,
    ipv6:           (issue) => `IPv6 invàlid: S'ha rebut ${issue.received}`,
    isoDate:        (issue) => `Data invàlida: S'ha rebut ${issue.received}`,
    isoDateTime:    (issue) => `Data-hora invàlida: S'ha rebut ${issue.received}`,
    isoTime:        (issue) => `Hora invàlida: S'ha rebut ${issue.received}`,
    isoTimeSecond:  (issue) => `Segon de temps invàlid: S'ha rebut ${issue.received}`,
    isoTimestamp:   (issue) => `Timestamp invàlid: S'ha rebut ${issue.received}`,
    isoWeek:        (issue) => `Setmana invàlida: S'ha rebut ${issue.received}`,
    length:         (issue) => `Llargada invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    mac:            (issue) => `MAC invàlida: S'ha rebut ${issue.received}`,
    mac48:          (issue) => `MAC de 48 bits invàlida: S'ha rebut ${issue.received}`,
    mac64:          (issue) => `MAC de 64 bits invàlida: S'ha rebut ${issue.received}`,
    maxBytes:       (issue) => `Quantitat de bytes invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    maxLength:      (issue) => `Llargada invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    maxSize:        (issue) => `Mida invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    maxValue:       (issue) => `Valor invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    mimeType:       (issue) => `Tipus de MIME invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    minBytes:       (issue) => `Quantitat de bytes invàlida: S'esperava mínim ${issue.expected} però s'ha rebut ${issue.received}`,
    minLength:      (issue) => `Llargada invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    minSize:        (issue) => `Mida invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    minValue:       (issue) => `Valor invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    multipleOf:     (issue) => `Múltiple invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    nonEmpty:       (issue) => `Llargada invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    notBytes:       (issue) => `Bytes invàlids: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    notLength:      (issue) => `Llargada invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    notSize:        (issue) => `Mida invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    notValue:       (issue) => `Valor invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    octal:          (issue) => `Octal invàlid: S'ha rebut ${issue.received}`,
    regex:          (issue) => `Format invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    safeInteger:    (issue) => `Enter segur invàlid: S'ha rebut ${issue.received}`,
    size:           (issue) => `Mida invàlida: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    startsWith:     (issue) => `Inici invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
    ulid:           (issue) => `ULID invàlid: S'ha rebut ${issue.received}`,
    url:            (issue) => `URL invàlida: S'ha rebut ${issue.received}`,
    uuid:           (issue) => `UUID invàlid: S'ha rebut ${issue.received}`,
    value:          (issue) => `Valor invàlid: S'esperava ${issue.expected} però s'ha rebut ${issue.received}`,
  },
};

export default language;
